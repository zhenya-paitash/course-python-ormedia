# Занятие 6. Классы. Парсинг
# В объектно-ориентированном программировании классы определяют набор объектов, которые могут взаимодействовать между
#   собой. Классы являются механизмом, позволяющим программисту классифицировать и сгруппировывать похожие объекты.
#   Класс — тип, описывающий устройство объектов. Объект — это экземпляр класса.
import requests  # *для парсинга*
from bs4 import BeautifulSoup  # *для парсинга*


class Orange:  # class имя: тело
    def __init__(self, w, c):
        self.weight = w
        self.color = c  # Тело в классе может быть простой или составной инструкцией, называемой _МЕТОДОМ_
        self.mold = 0

    def rot(self, days, temp):  # Обычно переменные экземпляра определяются внутри специального метода __init__
        self.mold = days * temp  # (initialize — инициализировать), который вызывается Python при создании объекта


or1 = Orange(10, 'dark orange')
print(or1)  # метод __имя__ говорит о том, что он принадлежит к группе методов перегрузки операторов
or1.weight = 322
or1.color = 'pink orange'
print(f"color: {or1.color},\nweight: {or1.weight}")

or2 = Orange(18, 'black orange')
or3 = Orange(15, 'white orange')
or4 = Orange(13, 'dark orange')

orange = Orange(6, 'pickle')
orange.rot(10, 33)
print(orange.mold)
"""                         Четыре столпа объектно-ориентированного программирования :

1. Наследование -     Наследование в программировании напоминает наследование в биологии. При генетическом наследовании 
                         вы наследуете характеристики вроде цвета глаз от родителей. Аналогично, когда вы создаете класс
                         он может наследовать методы и переменные от другого класса. Класс, от которого наследуют, 
                         называется родительским, а класс, который наследует, — дочерним.
                         Множественное наследование – возможность наследоваться от нескольких родителей. 

2. Инкапсуляция -     Инкапсуляция относится к двум концепциям:
                      1) Идея заключается в том, что в ООП переменные (состояние) и методы (для изменения состояния либо
                         выполнения вычислений, использующих состояние) группируются в единое целое — объект.
                      2) Вторая концепция, собственно инкапсуляция, заключается в сокрытии внутренних данных класса для 
                         предотвращения получения клиентом (кодом вне класса, который использует объект) прямого доступа
                         к этим данным.

3. Полиморфизм -      Способность представлять один и тот же интерфейс для разных базовых форм (типов данных).

4. Абстракция -       Процесс отнятия или удаления у чего-то характеристик с целью сведения его к набору основных, 
                         существенных характеристик. В объектно-ориентированном программировании абстракция используется
                         когда объекты моделируются с использованием классов, а ненужные подробности опускаются.
"""


# ПАРСИНГ
# Парсинг — это инструмент работы со строковыми данными
# Веб–Скрапинг – Веб-скрапинг это акт извлечения информации из сайта
# краулинг(crawling) - программе приходится переходить от одной ссылки к другой чтобы собрать всю необходимую информацию
def get_html(url):
    r = requests.get(url)
    return r.text


def get_data(html):
    soup = BeautifulSoup(html, 'lxml')
    h1 = soup.find('div', id='home-welcome').find('header').find('h1').text
    return h1


def main():
    url = "https://wordpress.org/"
    print(f"парсим текст: {get_data(get_html(url))}")


if __name__ == '__main__':
    main()
